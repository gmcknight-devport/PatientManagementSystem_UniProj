/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Glenn McKnight
 */
public class AdminGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        titleJLabel = new javax.swing.JLabel();
        backgoundJTab = new javax.swing.JTabbedPane();
        homeJPanel = new javax.swing.JPanel();
        welcomeJLabel = new javax.swing.JLabel();
        detailsJLabel = new javax.swing.JLabel();
        detailsJPanel = new javax.swing.JPanel();
        userInfoJText = new javax.swing.JTextArea();
        messagesJLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        messagesJList = new javax.swing.JList<>();
        deleteMessageJButton = new javax.swing.JButton();
        userJPanel = new javax.swing.JPanel();
        removeUserJPanel = new javax.swing.JPanel();
        removeDocJCombo = new javax.swing.JComboBox<>();
        removeDoctorJLabel = new javax.swing.JLabel();
        removeDoctorJButton = new javax.swing.JButton();
        removeSecJButton = new javax.swing.JButton();
        removeSecJCombo = new javax.swing.JComboBox<>();
        removeSecJLabel = new javax.swing.JLabel();
        removeAdminJLabel = new javax.swing.JLabel();
        removeAdminJCombo = new javax.swing.JComboBox<>();
        removeAdminJButton = new javax.swing.JButton();
        removeUserJLabel = new javax.swing.JLabel();
        createUserJPanel = new javax.swing.JPanel();
        userTypeJCombo = new javax.swing.JComboBox<>();
        userTypeJLabel = new javax.swing.JLabel();
        passwordJLabel = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        userTitleJLabel = new javax.swing.JLabel();
        titleJCombo = new javax.swing.JComboBox<>();
        forenameJLabel = new javax.swing.JLabel();
        surnameJLabel = new javax.swing.JLabel();
        forenameJText = new javax.swing.JTextField();
        surnameJTextField = new javax.swing.JTextField();
        newUserAddressLabel = new javax.swing.JLabel();
        addressJTextField = new javax.swing.JTextField();
        createJButton = new javax.swing.JButton();
        createUserJLabel = new javax.swing.JLabel();
        doctorJPanel = new javax.swing.JPanel();
        docRatingJCombo = new javax.swing.JComboBox<>();
        docRatingJLabel = new javax.swing.JLabel();
        docFeedbackLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        feedbackJText = new javax.swing.JTextArea();
        sendFeedbackJButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        docRatingJList = new javax.swing.JList<>();
        logoutJButton = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleJLabel.setText("Indisposed Clinic");

        welcomeJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        welcomeJLabel.setText("Welcome Back!");

        detailsJLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        detailsJLabel.setText("Your details:");

        detailsJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        userInfoJText.setEditable(false);
        userInfoJText.setColumns(20);
        userInfoJText.setRows(5);

        javax.swing.GroupLayout detailsJPanelLayout = new javax.swing.GroupLayout(detailsJPanel);
        detailsJPanel.setLayout(detailsJPanelLayout);
        detailsJPanelLayout.setHorizontalGroup(
            detailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsJPanelLayout.createSequentialGroup()
                .addComponent(userInfoJText, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        detailsJPanelLayout.setVerticalGroup(
            detailsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userInfoJText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        messagesJLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        messagesJLabel.setText("Messages");

        jScrollPane3.setViewportView(messagesJList);

        deleteMessageJButton.setText("Delete Message");

        javax.swing.GroupLayout homeJPanelLayout = new javax.swing.GroupLayout(homeJPanel);
        homeJPanel.setLayout(homeJPanelLayout);
        homeJPanelLayout.setHorizontalGroup(
            homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeJPanelLayout.createSequentialGroup()
                .addGroup(homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homeJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(welcomeJLabel))
                    .addGroup(homeJPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(detailsJLabel)
                                .addComponent(detailsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(messagesJLabel)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(deleteMessageJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        homeJPanelLayout.setVerticalGroup(
            homeJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeJPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(welcomeJLabel)
                .addGap(18, 18, 18)
                .addComponent(detailsJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(detailsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(messagesJLabel)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteMessageJButton)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        welcomeJLabel.getAccessibleContext().setAccessibleName("Welcome Back");

        backgoundJTab.addTab("Home", homeJPanel);

        removeUserJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        removeDoctorJLabel.setText("Remove Doctor:");
        removeDoctorJLabel.setName(""); // NOI18N

        removeDoctorJButton.setText("Remove Doctor");
        removeDoctorJButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        removeSecJButton.setText("Remove Secretary");

        removeSecJLabel.setText("Remove Secretary:");

        removeAdminJLabel.setText("Remove Admin:");

        removeAdminJButton.setText("Remove Admin");

        javax.swing.GroupLayout removeUserJPanelLayout = new javax.swing.GroupLayout(removeUserJPanel);
        removeUserJPanel.setLayout(removeUserJPanelLayout);
        removeUserJPanelLayout.setHorizontalGroup(
            removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeUserJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(removeUserJPanelLayout.createSequentialGroup()
                        .addComponent(removeDoctorJLabel)
                        .addGap(27, 27, 27)
                        .addComponent(removeDocJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, removeUserJPanelLayout.createSequentialGroup()
                        .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeSecJLabel)
                            .addComponent(removeAdminJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeSecJCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeAdminJCombo, 0, 340, Short.MAX_VALUE))))
                .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removeUserJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(removeDoctorJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeSecJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(removeUserJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeAdminJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removeUserJPanelLayout.setVerticalGroup(
            removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeUserJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeDoctorJLabel)
                    .addComponent(removeDocJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeDoctorJButton))
                .addGap(13, 13, 13)
                .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeSecJLabel)
                    .addComponent(removeSecJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeSecJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(removeUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeAdminJLabel)
                    .addComponent(removeAdminJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeAdminJButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        removeUserJLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        removeUserJLabel.setText("Remove User");

        createUserJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        userTypeJCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Secretary", "Doctor", "Administrator", " " }));
        userTypeJCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTypeJComboActionPerformed(evt);
            }
        });

        userTypeJLabel.setText("User Type:");

        passwordJLabel.setText("Password:");

        userTitleJLabel.setText("Title:");

        titleJCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr.", "Mrs.", "They" }));

        forenameJLabel.setText("First Name:");

        surnameJLabel.setText("Surname:");

        newUserAddressLabel.setText("Address:");

        addressJTextField.setEnabled(false);

        createJButton.setText("Create User");

        javax.swing.GroupLayout createUserJPanelLayout = new javax.swing.GroupLayout(createUserJPanel);
        createUserJPanel.setLayout(createUserJPanelLayout);
        createUserJPanelLayout.setHorizontalGroup(
            createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userTypeJLabel)
                    .addComponent(userTitleJLabel)
                    .addComponent(forenameJLabel)
                    .addComponent(surnameJLabel))
                .addGap(31, 31, 31)
                .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createUserJPanelLayout.createSequentialGroup()
                        .addComponent(titleJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordJLabel)
                            .addComponent(newUserAddressLabel))
                        .addGap(34, 34, 34)
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(addressJTextField)))
                    .addGroup(createUserJPanelLayout.createSequentialGroup()
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userTypeJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(forenameJText, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(surnameJTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createJButton)))
                .addContainerGap())
        );
        createUserJPanelLayout.setVerticalGroup(
            createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createUserJPanelLayout.createSequentialGroup()
                .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createUserJPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userTypeJLabel)
                            .addComponent(userTypeJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(titleJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createUserJPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(createJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userTitleJLabel)
                            .addComponent(passwordJLabel)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newUserAddressLabel)
                        .addComponent(addressJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createUserJPanelLayout.createSequentialGroup()
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(forenameJLabel)
                            .addComponent(forenameJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(createUserJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(surnameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(surnameJLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createUserJLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        createUserJLabel.setText("Create User");

        javax.swing.GroupLayout userJPanelLayout = new javax.swing.GroupLayout(userJPanel);
        userJPanel.setLayout(userJPanelLayout);
        userJPanelLayout.setHorizontalGroup(
            userJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userJPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(userJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createUserJLabel)
                    .addComponent(removeUserJLabel)
                    .addGroup(userJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(removeUserJPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createUserJPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        userJPanelLayout.setVerticalGroup(
            userJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createUserJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createUserJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUserJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeUserJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        backgoundJTab.addTab("Users", userJPanel);

        docRatingJLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        docRatingJLabel.setText("Doctor Ratings");

        docFeedbackLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        docFeedbackLabel.setText("Doctor Feedback");

        feedbackJText.setColumns(20);
        feedbackJText.setRows(5);
        jScrollPane2.setViewportView(feedbackJText);

        sendFeedbackJButton.setText("Send Feedback");

        jScrollPane4.setViewportView(docRatingJList);

        javax.swing.GroupLayout doctorJPanelLayout = new javax.swing.GroupLayout(doctorJPanel);
        doctorJPanel.setLayout(doctorJPanelLayout);
        doctorJPanelLayout.setHorizontalGroup(
            doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addComponent(docRatingJCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorJPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(sendFeedbackJButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, doctorJPanelLayout.createSequentialGroup()
                        .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(docFeedbackLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(docRatingJLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        doctorJPanelLayout.setVerticalGroup(
            doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorJPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(docRatingJCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(docRatingJLabel)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(docFeedbackLabel)
                .addGroup(doctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorJPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(sendFeedbackJButton)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        backgoundJTab.addTab("Doctor Info", doctorJPanel);

        logoutJButton.setText("Log Out");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(titleJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(logoutJButton)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(backgoundJTab))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 424, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 45, Short.MAX_VALUE)
                    .addComponent(backgoundJTab, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTypeJComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTypeJComboActionPerformed
        if(getUserTypeJCombo().getSelectedItem() == "Doctor"){
            addressJTextField.setEnabled(true);
            titleJCombo.setEnabled(false);
        }else{
            addressJTextField.setEnabled(false);
            titleJCombo.setEnabled(true);
        }
    }//GEN-LAST:event_userTypeJComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }
    /**
     * Display JOptionPane to notify the user when required.
     * @param message 
     */
    public void displayMessage(String message){
        JOptionPane.showMessageDialog(this, message);
    }
    /**
     * Clear all JTextFields of user input.
     */
    public void clearCreateUserFields(){
        forenameJText.setText("");
        surnameJTextField.setText("");
        jPasswordField.setText("");
        addressJTextField.setText("");
    }
    /**
     * Register logout button handler.
     * @param controller to respond to event.
     */
    public void addLogoutButtonHandler(ActionListener controller){
        logoutJButton.addActionListener(controller);
    }
    /**
     * Set Jcombo Boxes with doctor information. Clears them initially, in case 
     * of data change.
     * @param doctor list of doctor information to display.
     */
    public void setDocJCombos(ArrayList<String> doctor) {
        removeDocJCombo.removeAllItems();
        docRatingJCombo.removeAllItems();
        
        doctor.forEach((s) -> {
            removeDocJCombo.addItem(s);
            docRatingJCombo.addItem(s);
        });        
    }    
    ////////////////////////////////////////////////////////////////////////////
    //Home Page   
    /**
     * Display logged in user details on home page.
     * @param info user details to be displayed.
     */
    public void setUserInfoJText(String info){
        this.userInfoJText.setText(info);
    }    
    /**
     * Sets messages the user has been sent on home page.
     * @param messages List of messages to be displayed.
     */
    public void setUserMessages(List<String> messages){
        String[] allMessages = new String[messages.size()]; 
        
        for(int i = 0; i < messages.size(); i++){
            allMessages[i] = messages.get(i);
        }
        
        messagesJList.setListData(allMessages);
    }
    /**
     * Register button handler to respond to delete message button.
     * @param controller to respond to delete message events.
     */
    public void addDeleteMessageButtonHandler(ActionListener controller){
        deleteMessageJButton.addActionListener(controller);
    }
    /**
     * Get index of message selected for deletion by user.
     * @return index of message to be deleted.
     */
    public int getMessageToDeleteIndex(){
        return messagesJList.getSelectedIndex();
    }
    ////////////////////////////////////////////////////////////////////////////
    //Users page    
    /**
     * Register button handler to respond to remove doctor button.
     * @param controller to respond to event.
     */
    public void addRemoveDoctorButtonHandler(ActionListener controller){
        removeDoctorJButton.addActionListener(controller);
    }
    /**
     * Register button handler to respond to remove secretary button.
     * @param controller  to respond to event.
     */
    public void addRemoveSecButtonHandler(ActionListener controller){
        removeSecJButton.addActionListener(controller);
    }
    /**
     * Register button handler to remove administrator button.
     * @param controller to respond to event.
     */
    public void addRemoveAdminButtonHandler(ActionListener controller){
        removeAdminJButton.addActionListener(controller);
    }
    /**
     * Register button handler to create user button.
     * @param controller to respond to event.
     */
    public void addCreateUserButtonHandler(ActionListener controller){
        createJButton.addActionListener(controller);
    }    
    /**
     * Get value from jpassword field of user creation.
     * @return password.
     */
    public String getjPasswordField() {
        return new String(jPasswordField.getPassword());
    }
    /**
     * Get value from forename JTextField of user creation.
     * @return 
     */
    public String getForenameJText() {
        return forenameJText.getText();
    }
    /**
     * Get the value selected in the remove doctor JComboBox.
     * @return doctor to be removed.
     */
    public JComboBox<Object> getRemoveDocJCombo() {
        return removeDocJCombo;
    }
    /**
     * Get the value selected in the remove secretary JComboBox.
     * @return secretary to be removed. 
     */
    public JComboBox<Object> getRemoveSecJCombo() {
        return removeSecJCombo;
    }
    /**
     * Get the value selected in the remove administrator JComboBox.
     * @return administrator to be removed. 
     */
    public JComboBox<Object> getRemoveAdminJCombo(){
        return removeAdminJCombo;
    }
    /**
     * Get value from surname JTextField of user creation.
     * @return surname.
     */
    public String getSurnameJTextField() {
        return surnameJTextField.getText();
    }
    /**
     * Get value from address JTextField of user creation.
     * @return address.
     */
    public String getAddressJTextField(){
        return addressJTextField.getText();
    }
    /**
     * Get value from title JTextBox of user creation.
     * @return user title.
     */
    public JComboBox<String> getTitleJCombo() {
        return titleJCombo;
    }
    /**
     * Get value from user type JTextBox of user creation.
     * @return type of user to be created.
     */
    public JComboBox<String> getUserTypeJCombo() {
        return userTypeJCombo;
    }    
    /**
     * Sets value of remove secretary JCombo box.
     * @param secretary list of secretaries.
     */
    public void setRemoveSecJCombo(ArrayList<String> secretary) {
        removeSecJCombo.removeAllItems();
        
        secretary.forEach((s) -> {
            removeSecJCombo.addItem(s);
        });  
    }
    /**
     * Sets value of remove administrator JCombo box.
     * @param admin list of administrators.
     */
    public void setRemoveAdminJCombo(ArrayList<String> admin){
        removeAdminJCombo.removeAllItems();
        
        admin.forEach((s) -> {
            removeAdminJCombo.addItem(s);
        }); 
    }
    
    ///////////////////////////////////////////////////////////////////////////
    //Doctor Info 
    /**
     * Register button handler to respond to doctor rating JCombo.
     * @param controller to respond to event.
     */
    public void addDoctorRatingJComboHandler(ActionListener controller){
        docRatingJCombo.addActionListener(controller);
    }
    /**
     * Get the information of the doctor selected in the combo box.
     * @return selected doctor.
     */
    public String getSelectedDoctor(){
        return docRatingJCombo.getSelectedItem().toString();
    }
    /**
     * Set the doctor rating JTextArea for each doctor in list.
     * @param ratings list of doctors and ratings to be set.
     */   
    public void setDoctorRatingsJText(String[] ratings){
        docRatingJList.setListData(ratings);
    }
    /**
     * Get inputted feedback to provide to a doctor. 
     * @return feedback text.
     */
    public String getDoctorFeedback(){
        return feedbackJText.getText();
    }
    /**
     * Register button handler to respond to send feedback button.
     * @param controller to respond to event.
     */
    public void addSendFeedbackJButtonHandler(ActionListener controller){
        sendFeedbackJButton.addActionListener(controller);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressJTextField;
    private javax.swing.JTabbedPane backgoundJTab;
    private javax.swing.JButton createJButton;
    private javax.swing.JLabel createUserJLabel;
    private javax.swing.JPanel createUserJPanel;
    private javax.swing.JButton deleteMessageJButton;
    private javax.swing.JLabel detailsJLabel;
    private javax.swing.JPanel detailsJPanel;
    private javax.swing.JLabel docFeedbackLabel;
    private javax.swing.JComboBox<String> docRatingJCombo;
    private javax.swing.JLabel docRatingJLabel;
    private javax.swing.JList<String> docRatingJList;
    private javax.swing.JPanel doctorJPanel;
    private javax.swing.JTextArea feedbackJText;
    private javax.swing.JLabel forenameJLabel;
    private javax.swing.JTextField forenameJText;
    private javax.swing.JPanel homeJPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JLabel messagesJLabel;
    private javax.swing.JList<String> messagesJList;
    private javax.swing.JLabel newUserAddressLabel;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JButton removeAdminJButton;
    private javax.swing.JComboBox<Object> removeAdminJCombo;
    private javax.swing.JLabel removeAdminJLabel;
    private javax.swing.JComboBox<Object> removeDocJCombo;
    private javax.swing.JButton removeDoctorJButton;
    private javax.swing.JLabel removeDoctorJLabel;
    private javax.swing.JButton removeSecJButton;
    private javax.swing.JComboBox<Object> removeSecJCombo;
    private javax.swing.JLabel removeSecJLabel;
    private javax.swing.JLabel removeUserJLabel;
    private javax.swing.JPanel removeUserJPanel;
    private javax.swing.JButton sendFeedbackJButton;
    private javax.swing.JLabel surnameJLabel;
    private javax.swing.JTextField surnameJTextField;
    private javax.swing.JComboBox<String> titleJCombo;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JTextArea userInfoJText;
    private javax.swing.JPanel userJPanel;
    private javax.swing.JLabel userTitleJLabel;
    private javax.swing.JComboBox<String> userTypeJCombo;
    private javax.swing.JLabel userTypeJLabel;
    private javax.swing.JLabel welcomeJLabel;
    // End of variables declaration//GEN-END:variables
}
